From dd5060da9e7770ee142d1d1e1b3d2fb2198f9b0b Mon Sep 17 00:00:00 2001
From: sub77 <sub77@ymail.com>
Date: Sun, 25 Nov 2018 00:12:09 +0100
Subject: [PATCH] OMXNodeInstance: Allow dynamic native handle for shared mem
 buffer

* Change Ief2d2d4d0445074c0ecdc723b1b25997a7631389, part of Aug 2018
  ASB, authored to mitigate CVE-2018-9427, restricted useBuffer()
  based on buffer type and port mode.
* Follow-up change I1e4eb72e070f4e60ff4df94f9b9d161361828477 allowed
  dynamic handles for input buffers, but not a *native* handle for
  this specific buffer type.
* Some of our devices using legacy HAL1 recording require this
  combination of buffer type and port mode, so allow when explicitly
  requested.

Change-Id: I15f8cbb3956773e2ba97032203f5e9254505d8ac
---
 media/libstagefright/omx/OMXNodeInstance.cpp | 1 +
 1 file changed, 1 insertion(+)

diff --git a/media/libstagefright/omx/OMXNodeInstance.cpp b/media/libstagefright/omx/OMXNodeInstance.cpp
index 32113c2..9e1622d 100644
--- a/media/libstagefright/omx/OMXNodeInstance.cpp
+++ b/media/libstagefright/omx/OMXNodeInstance.cpp
@@ -1078,6 +1078,7 @@ status_t OMXNodeInstance::useBuffer(
 
         case OMXBuffer::kBufferTypeSharedMem: {
             if (mPortMode[portIndex] != IOMX::kPortModePresetByteBuffer
+                    && mPortMode[portIndex] != IOMX::kPortModeDynamicNativeHandle
                     && mPortMode[portIndex] != IOMX::kPortModeDynamicANWBuffer) {
                 break;
             }
-- 
2.7.4


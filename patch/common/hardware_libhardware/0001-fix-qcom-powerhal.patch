From 549e6cf7b949b92ca2a0d874e05426fa4d350818 Mon Sep 17 00:00:00 2001
From: sub77 <sub77@ymail.com>
Date: Tue, 31 Oct 2017 06:40:26 +0000
Subject: [PATCH] fix qcom powerhal

Change-Id: I18b020613ba8b27a4a9637e28f65909d19138d9f
---
 include/hardware/power.h | 32 +++++++++++++++++++++++++++++---
 1 file changed, 29 insertions(+), 3 deletions(-)

diff --git a/include/hardware/power.h b/include/hardware/power.h
index bd8216e..9ca4e3b 100644
--- a/include/hardware/power.h
+++ b/include/hardware/power.h
@@ -65,11 +65,17 @@ typedef enum {
     POWER_HINT_SUSTAINED_PERFORMANCE = 0x00000006,
     POWER_HINT_VR_MODE = 0x00000007,
     POWER_HINT_LAUNCH = 0x00000008,
-    POWER_HINT_DISABLE_TOUCH = 0x00000009
+    POWER_HINT_DISABLE_TOUCH = 0x00000009,
+    POWER_HINT_CPU_BOOST    = 0x00000010,
+    POWER_HINT_LAUNCH_BOOST = 0x00000011,
+    POWER_HINT_AUDIO        = 0x00000020,
+    POWER_HINT_SET_PROFILE  = 0x00000030
+
 } power_hint_t;
 
 typedef enum {
-    POWER_FEATURE_DOUBLE_TAP_TO_WAKE = 0x00000001
+    POWER_FEATURE_DOUBLE_TAP_TO_WAKE = 0x00000001,
+    POWER_FEATURE_SUPPORTED_PROFILES = 0x00001000
 } feature_t;
 
 /*
@@ -158,6 +164,15 @@ typedef struct {
 } power_state_platform_sleep_state_t;
 
 /**
+ * Process info, passed as an opaque handle when
+ * using POWER_HINT_LAUNCH_BOOST.
+ */
+typedef struct launch_boost_info {
+    pid_t pid;
+    const char* packageName;
+} launch_boost_info_t;
+
+/**
  * Every hardware module must have a data structure named HAL_MODULE_INFO_SYM
  * and the fields of this data structure must begin with hw_module_t
  * followed by module specific information.
@@ -257,6 +272,12 @@ typedef struct power_module {
      *     The data parameter is non-zero when touch could be disabled, and zero
      *     when touch needs to be re-enabled.
      *
+     * POWER_HINT_CPU_BOOST
+     *
+     *     An operation is happening where it would be ideal for the CPU to
+     *     be boosted for a specific duration. The data parameter is an
+     *     integer value of the boost duration in microsecond
+     *
      * A particular platform may choose to ignore any hint.
      *
      * availability: version 0.2
@@ -280,6 +301,12 @@ typedef struct power_module {
     void (*setFeature)(struct power_module *module, feature_t feature, int state);
 
     /*
+     * (*getFeature) is called to get the current value of a particular
+     * feature or capability from the hardware or PowerHAL
+     */
+    int (*getFeature)(struct power_module *module, feature_t feature);
+
+    /*
      * Platform-level sleep state stats:
      * Report cumulative info on the statistics on platform-level sleep states since boot.
      *
@@ -337,7 +364,6 @@ typedef struct power_module {
 
 } power_module_t;
 
-
 __END_DECLS
 
 #endif  // ANDROID_INCLUDE_HARDWARE_POWER_H
-- 
2.1.2

